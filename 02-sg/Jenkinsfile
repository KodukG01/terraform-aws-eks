pipeline {
    agent { 
        label 'roboshop-dev'
    }

    environment { 
        appVersion = ''
        REGION = 'us-east-1'
        ACC_ID = '108717859359'
        PROJECT = 'roboshop'
        COMPONENT = 'catalogue'
    }

    options {
        timeout(time: 30, unit: 'MINUTES') 
        // disableConcurrentBuilds()
        // ansiColor('xterm')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Init') {
            steps {
                script {
                    withAWS(credentials: 'jenkins-ecr-user', region: 'us-east-1') {
                        sh """
                        cd 02-sg
                        terraform init -reconfigure
                        """
                    }
                }
            }
        }

        stage('Plan') {
            steps {
                script {
                    withAWS(credentials : 'jenkins-ecr-user', region: 'us-east-1') {
                        sh """
                        cd 02-sg
                        terraform plan
                        """
                    }
                }
            }
        }

        stage('Apply') {
            steps {
                script {
                    withAWS(credentials: 'jenkins-ecr-user', region: 'us-east-1') {
                        sh """
                        cd 02-sg
                        terraform apply -auto-approve
                        """
                    }
                }
            }
        }

        stage("Trigger Bastion ACM ELB EKS") {
            parallel {
                stage ("Trigger Bastion") {
                    steps {
                        script {
                            build job: '03-bastion',
                                  propagate: false,
                                  wait: false
                        }
                    }
                }
                stage ("Trigger EKS") {
                    steps {
                        script {
                            build job: '10-eks',
                                  propagate: false,
                                  wait: false
                        }
                    }
                }
                stage ("Trigger ACM") {
                    steps {
                        script {
                            build job: '08-acm',
                                  propagate: false,
                                  wait: false
                        }
                    }
                }
                stage ("Trigger ALB") {
                    steps {
                        script {
                            build job: '09-frontend-alb',
                                  propagate: false,
                                  wait: false
                        }
                    }
                }
            }
        }
    }

    post { 
        always { 
            echo 'I will always say Hello again!'
            deleteDir()
        }
        success { 
            echo 'Hello Success'
        }
        failure { 
            echo 'Hello Failure'
        }
    }
}
